/* Breakpoints mixins */

@mixin from-extra-small-mobile-and-less {
	@media screen and (max-width: map-get($breakpoints, xs-mobile)) {
		@content;
	}
}

@mixin from-small-mobile-and-less {
	@media screen and (max-width: map-get($breakpoints, sm-mobile)) {
		@content;
	}
}

@mixin from-medium-mobile-and-less {
	@media screen and (max-width: map-get($breakpoints, md-mobile)) {
		@content;
	}
}

@mixin from-large-mobile-and-less {
	@media screen and (max-width: map-get($breakpoints, lg-mobile)) {
		@content;
	}
}

@mixin from-large-mobile-of-470px-and-less {
	@media screen and (max-width: map-get($breakpoints, lg-mobile-470w)) {
		@content;
	}
}

/* Mobile with a landscape orientation width between 480px and 529px */
@mixin for-mobile-in-small-landscape-orientation {
	@media screen and (max-width: map-get($breakpoints,  mobile-sm-landscape-orientation)) {
		@content;
	}
}

/* Mobile with a landscape orientation width between 530px and 599px */
@mixin for-mobile-in-medium-landscape-orientation {
	@media screen and (max-width: map-get($breakpoints, mobile-md-landscape-orientation)) {
		@content;
	}
}

/* Mobile with a landscape orientation width between 600px and 699px */
@mixin for-mobile-in-large-landscape-orientation {
	@media screen and (max-width: map-get($breakpoints, mobile-lg-landscape-orientation)) {
		@content;
	}
}

/* Small tablette and mobile with a landscape orientation width between 700px and 850px */
@mixin for-mobile-in-extra-large-landscape-orientation-and-small-tablette {
	@media screen and (max-width: map-get($breakpoints, mobile-xl-landscape-orientation)) {
		@content;
	}
}

@mixin from-tablette-and-less {
	@media screen and (max-width: map-get($breakpoints, tablette)) {
		@content;
	}
}

@mixin from-computer-and-less {
	@media screen and (max-width: map-get($breakpoints, computer)) {
		@content;
	}
}

@mixin from-large-screen-and-less {
	@media screen and (max-width: map-get($breakpoints, large-screen)) {
		@content;
	}
}


/* Sets the selector sizes */

@mixin set-size($size, $option: 0) {
	@if ($option == width) or ($option == height) {
		@if ($option == width) {
			width: $size;
		} @else if ($option == height) {
			height: $size;
		} @else {
			$size: 0;
		}
	} @else {
		width: map-get($size, width);
		height: map-get($size, height);
	}
}

/* Sets the selector margin */

@mixin set-margin($size, $optional-sides: 0) {
	@if (use-shorthand-property($optional-sides) == "no") {
		@if ($optional-sides == top) {
			margin-top: $size;
		}

		@if ($optional-sides == bottom) {
			margin-bottom: $size;
		}

		@if ($optional-sides == right) {
			margin-right: $size;
		}

		@if ($optional-sides == left) {
			margin-left: $size;
		}
	} @else {
		margin: $size;
	}
}

/* Sets the selctor padding */

@mixin set-padding($size, $optional-sides: 0) {
	@if (use-shorthand-property($optional-sides) == "no") {
		@if ($optional-sides == top) {
			padding-top: $size;
		}

		@if ($optional-sides == bottom) {
			padding-bottom: $size;
		}

		@if ($optional-sides == right) {
			padding-right: $size;
		}

		@if ($optional-sides == left) {
			padding-left: $size;
		}
	} @else {
		padding: $size;
	}
}

/* Select menu items style (select items and selected item) */
@mixin select-menu-items-appearance {
	display: flex;

	align-items: center;

    color: white;
    background-color: $primary-color;

    font-size: $select-menu-font-size;

    cursor: pointer;
    user-select: none;
}

@mixin select-menu-items-hover-and-focus-effect() {
	color: $default-text-color;
	background-color: $secondary-background-color;
}